<?php
declare(strict_types=1);

namespace Adsr\Elektron;

class MachinedrumKit extends Struct {
    use Util;

    public const DEFAULT = [0xf0,0x00,0x20,0x3c,0x02,0x00,0x52,0x04,0x01,0x00,0x7f,0x45,0x51,0x39,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x40,0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x40,0x40,0x00,0x7f,0x00,0x00,0x00,0x7f,0x40,0x00,0x00,0x40,0x00,0x00,0x40,0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x40,0x40,0x00,0x7f,0x00,0x00,0x00,0x7f,0x40,0x00,0x00,0x40,0x00,0x00,0x40,0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x40,0x40,0x00,0x7f,0x00,0x00,0x00,0x7f,0x40,0x00,0x00,0x40,0x00,0x00,0x40,0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x40,0x40,0x00,0x7f,0x00,0x00,0x00,0x7f,0x40,0x00,0x00,0x40,0x00,0x00,0x40,0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x40,0x40,0x00,0x7f,0x00,0x00,0x00,0x7f,0x40,0x00,0x00,0x40,0x00,0x00,0x40,0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x40,0x40,0x00,0x7f,0x00,0x00,0x00,0x7f,0x40,0x00,0x00,0x40,0x00,0x00,0x40,0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x40,0x40,0x00,0x7f,0x00,0x00,0x00,0x7f,0x40,0x00,0x00,0x40,0x00,0x00,0x40,0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x40,0x40,0x00,0x7f,0x00,0x00,0x00,0x7f,0x40,0x00,0x00,0x40,0x00,0x00,0x40,0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x40,0x40,0x00,0x7f,0x00,0x00,0x00,0x7f,0x40,0x00,0x00,0x40,0x00,0x00,0x40,0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x40,0x40,0x00,0x7f,0x00,0x00,0x00,0x7f,0x40,0x00,0x00,0x40,0x00,0x00,0x40,0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x40,0x40,0x00,0x7f,0x00,0x00,0x00,0x7f,0x40,0x00,0x00,0x40,0x00,0x00,0x40,0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x40,0x40,0x00,0x7f,0x00,0x00,0x00,0x7f,0x40,0x00,0x00,0x40,0x00,0x00,0x40,0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x40,0x40,0x00,0x7f,0x00,0x00,0x00,0x7f,0x40,0x00,0x00,0x40,0x00,0x00,0x40,0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x40,0x40,0x00,0x7f,0x00,0x00,0x00,0x7f,0x40,0x00,0x00,0x40,0x00,0x00,0x40,0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x40,0x40,0x00,0x7f,0x00,0x00,0x00,0x7f,0x40,0x00,0x00,0x40,0x00,0x00,0x40,0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x40,0x40,0x00,0x7f,0x00,0x00,0x00,0x7f,0x40,0x00,0x00,0x40,0x00,0x00,0x64,0x64,0x64,0x64,0x64,0x64,0x64,0x64,0x64,0x64,0x64,0x64,0x64,0x64,0x64,0x64,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x08,0x00,0x00,0x02,0x1a,0x00,0x00,0x00,0x00,0x00,0x01,0x00,0x00,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x04,0x00,0x00,0x00,0x02,0x1a,0x00,0x00,0x00,0x00,0x00,0x02,0x00,0x00,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0x00,0x02,0x1a,0x00,0x00,0x00,0x00,0x00,0x03,0x00,0x00,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x02,0x1a,0x00,0x00,0x00,0x00,0x00,0x04,0x00,0x00,0x00,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x02,0x40,0x1a,0x00,0x00,0x00,0x00,0x05,0x00,0x00,0x00,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x20,0x02,0x1a,0x00,0x00,0x00,0x00,0x06,0x00,0x00,0x00,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x10,0x00,0x02,0x1a,0x00,0x00,0x00,0x00,0x00,0x07,0x00,0x00,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x08,0x00,0x00,0x02,0x1a,0x00,0x00,0x00,0x00,0x00,0x08,0x00,0x00,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x04,0x00,0x00,0x00,0x02,0x1a,0x00,0x00,0x00,0x00,0x00,0x09,0x00,0x00,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0x00,0x02,0x1a,0x00,0x00,0x00,0x00,0x00,0x0a,0x00,0x00,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x02,0x1a,0x00,0x00,0x00,0x00,0x00,0x0b,0x00,0x00,0x00,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x02,0x40,0x1a,0x00,0x00,0x00,0x00,0x0c,0x00,0x00,0x00,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x20,0x02,0x1a,0x00,0x00,0x00,0x00,0x0d,0x00,0x00,0x00,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x10,0x00,0x02,0x1a,0x00,0x00,0x00,0x00,0x00,0x0e,0x00,0x00,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x08,0x00,0x00,0x02,0x1a,0x00,0x00,0x00,0x00,0x00,0x0f,0x00,0x00,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x04,0x00,0x00,0x00,0x02,0x1a,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x40,0x00,0x00,0x7f,0x7f,0x60,0x20,0x00,0x20,0x00,0x00,0x7f,0x00,0x60,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x7f,0x7f,0x7f,0x7f,0x7f,0x7f,0x7f,0x00,0x00,0x7f,0x7f,0x7f,0x7f,0x7f,0x7f,0x7f,0x7f,0x7f,0x7f,0x7f,0x7f,0x7f,0x7f,0x7f,0x7f,0x7f,0x7f,0x7f,0x7f,0x7f,0x7f,0x7f,0x7f,0x7f,0x7f,0x7f,0x7f,0x7f,0x7f,0x7f,0x7f,0x78,0x7f,0x7f,0x7f,0x7f,0x1a,0x3a,0x09,0x47,0xf7];
    public const LEN = 1233;

    public function getDataMap(): array {
        return [
            'orig_pos' => new Unknown(1),
            'name' => new Str(16),
            'track_params' => new Arr(16, fn() => new Arr(24, fn() => new Int8_1())),
            'track_levels' => new Arr(16, fn() => new Int8_1()),
            'track_machines' => new SevenBitField(74, new Arr(16, fn() => new Int32())), // TODO constraint
            'lfo_settings' => new SevenBitField(659, new Arr(16, fn() => new MachinedrumLfo())),
            'fx_rev_dvol' => new Int8_1(),
            'fx_rev_pred' => new Int8_1(),
            'fx_rev_dec' => new Int8_1(),
            'fx_rev_damp' => new Int8_1(),
            'fx_rev_hp' => new Int8_1(),
            'fx_rev_lp' => new Int8_1(),
            'fx_rev_gate' => new Int8_1(),
            'fx_rev_lev' => new Int8_1(),
            'fx_echo_time' => new Int8_1(),
            'fx_echo_mod' => new Int8_1(),
            'fx_echo_mfrq' => new Int8_1(),
            'fx_echo_fb' => new Int8_1(),
            'fx_echo_fltf' => new Int8_1(),
            'fx_echo_fltw' => new Int8_1(),
            'fx_echo_mono' => new Int8_1(),
            'fx_echo_lev' => new Int8_1(),
            'fx_eq_lf' => new Int8_1(),
            'fx_eq_lg' => new Int8_1(),
            'fx_eq_hf' => new Int8_1(),
            'fx_eq_hg' => new Int8_1(),
            'fx_eq_pf' => new Int8_1(),
            'fx_eq_pg' => new Int8_1(),
            'fx_eq_pq' => new Int8_1(),
            'fx_eq_gain' => new Int8_1(),
            'fx_dyn_atck' => new Int8_1(),
            'fx_dyn_rel' => new Int8_1(),
            'fx_dyn_trhd' => new Int8_1(),
            'fx_dyn_rtio' => new Int8_1(),
            'fx_dyn_knee' => new Int8_1(),
            'fx_dyn_hp' => new Int8_1(),
            'fx_dyn_outg' => new Int8_1(),
            'fx_dyn_mix' => new Int8_1(),
            'trig_groups' => new SevenBitField(37, new MachinedrumTrigGroups()),
        ];
    }

    public function fromSysex(array $data): void {
        // Ensure length
        $this->ensureLen($data, self::LEN);

        // Discard header and footer
        $data = array_slice($data, 9, self::LEN - 9 - 1);

        // Pick off checksum and length
        $data_len = count($data);
        $cksum_hi = $data[$data_len - 4];
        $cksum_lo = $data[$data_len - 3];
        $len_hi = $data[$data_len - 2];
        $len_lo = $data[$data_len - 1];
        $cksum = ($cksum_hi << 7) + $cksum_lo;
        $len = ($len_hi << 7) + $len_lo;

        // Calc checksum
        $data_to_cksum = array_slice($data, 0, -4);
        $cksum_calc = $this->checksum($data_to_cksum);

        // Ensure checksums match
        if ($cksum_calc !== $cksum) {
            throw new \RuntimeException(sprintf(
                "Expected checksum %d but saw %d",
                $cksum_calc,
                $cksum
            ));
        }

        // Parse
        parent::fromSysex($data);
    }

    public function toSysex(): array {
        $sysex = [];

        $data = parent::toSysex();

        $cksum = $this->checksum($data);
        $len = count($data) + 4;

        $header = array_slice(self::DEFAULT, 0, 9);
        $footer = array_slice(self::DEFAULT, -1);

        $sysex = array_merge(
            $header,
            $data,
            [$cksum >> 7, $cksum & 0x7f, $len >> 7, $len & 0x7f],
            $footer
        );

        return $sysex;
    }
}
